{
	"info": {
		"_postman_id": "2b4e6c19-c1dc-482f-808c-c28d560ef7af",
		"name": "üîêUser Management API",
		"description": "This Postman collection provides a complete suite of RESTful API endpoints for managing users in a Node.js + Express.js backend, connected to MongoDB Atlas and protected by JWT-based authentication.\n\n---\n\n### üìå **Core Features**\n\n| Category | Description |\n| --- | --- |\n| **Authentication** | Secure user registration, login, and access to protected resources. |\n| **CRUD Operations** | Create, Read, Update, and Delete user accounts. |\n| **JWT Support** | All protected routes require a valid JSON Web Token in the `Authorization` header. |\n| **Logging** | Each API request is logged with rich metadata (e.g., correlation ID, client info, etc.) to a log store or file. |\n\n---\n\n### üìÇ **Endpoints in the Collection**\n\n| Method | Endpoint | Description | Auth Required |\n| --- | --- | --- | --- |\n| `POST` | `/api/auth/register` | Register a new user | ‚ùå |\n| `POST` | `/api/auth/login` | Log in and receive JWT token | ‚ùå |\n| `GET` | `/api/users` | Get list of all users | ‚úÖ |\n| `GET` | `/api/users/:id` | Get a single user by ID | ‚úÖ |\n| `PUT` | `/api/users/:id` | Update user data | ‚úÖ |\n| `DELETE` | `/api/users/:id` | Delete a user by ID | ‚úÖ |\n| `GET` | `/api/secret` | Access a protected test route | ‚úÖ |\n\n---\n\n### üß™ **How to Test (Postman)**\n\n1. **Register a User**\n    \n    - `POST /api/auth/register`\n        \n    - Body: `{ \"name\": \"John\", \"email\": \"john@example.com\", \"password\": \"123456\" }`\n        \n2. **Login to Receive JWT**\n    \n    - `POST /api/auth/login`\n        \n    - Response includes a token\n        \n3. **Use Token in Protected Routes**\n    \n    - Set Header: `Authorization: Bearer`\n        \n    - Test `/api/users`, `/api/secret`, etc.\n        \n\n---\n\n### üìù Logging Schema (Behind the Scenes)\n\nEvery request logs:\n\n- Timestamp\n    \n- API name and operation\n    \n- User ID, Client name, Session ID\n    \n- HTTP method, status, and execution time\n    \n- Correlation & error tracking IDs\n    \n\nStored in JSON format for easy querying and debugging.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43800398",
		"_collection_link": "https://pastos101.postman.co/workspace/Pastos101's-Workspace~9a58b0c2-db31-4d83-8c9e-6810af3e8629/collection/43800398-2b4e6c19-c1dc-482f-808c-c28d560ef7af?action=share&source=collection_link&creator=43800398"
	},
	"item": [
		{
			"name": "Register User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john_doe\",\r\n  \"email\": \"john@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"john@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Access Protected Route",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-name",
						"value": "PostmanClient",
						"type": "text"
					},
					{
						"key": "x-correlation-id",
						"value": "abc123",
						"type": "text"
					},
					{
						"key": "x-session-id",
						"value": "sess001",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/secret",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"secret"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-name",
						"value": "PostmanClient",
						"type": "text"
					},
					{
						"key": "x-correlation-id",
						"value": "abc123",
						"type": "text"
					},
					{
						"key": "x-session-id",
						"value": "sess001",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single User",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-client-name",
						"value": "PostmanClient",
						"type": "text"
					},
					{
						"key": "x-correlation-id",
						"value": "abc123",
						"type": "text"
					},
					{
						"key": "x-session-id",
						"value": "sess001",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/users/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-client-name",
						"value": "PostmanClient",
						"type": "text"
					},
					{
						"key": "x-correlation-id",
						"value": "abc123",
						"type": "text"
					},
					{
						"key": "x-session-id",
						"value": "sess001",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"john_updated\",\r\n  \"email\": \"updated@example.com\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-client-name",
						"value": "PostmanClient",
						"type": "text"
					},
					{
						"key": "x-correlation-id",
						"value": "abc123",
						"type": "text"
					},
					{
						"key": "x-session-id",
						"value": "sess001",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/users/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NGVmMTI2ZTg0YjIwNzdmZDRlNTg5ZSIsImlhdCI6MTc1MDAwNDAzMywiZXhwIjoxNzUwMDA3NjMzfQ.wQB-oo2wm4P0Gaik9KaYdBnJFqwY84RKje3FBd0YeQI",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}